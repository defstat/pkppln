<?php

declare(strict_types=1);

/*
 * (c) 2020 Michael Joyce <mjoyce@sfu.ca>
 * This source file is subject to the GPL v2, bundled
 * with this source code in the file LICENSE.
 */

namespace App\Entity;

use Doctrine\ORM\Mapping as ORM;
use Nines\UtilBundle\Entity\AbstractEntity;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Blacklist.
 *
 * @ORM\Table(name="blacklist", indexes={
 *     @ORM\Index(columns={"uuid"}, flags={"fulltext"})
 * })
 * @ORM\Entity(repositoryClass="App\Repository\BlacklistRepository")
 * @ORM\HasLifecycleCallbacks
 */
class Blacklist extends AbstractEntity
{
    /**
     * Journal UUID, as generated by the PLN plugin.
     *
     * This cannot be part of a relationship - a journal may be listed before
     * we have a record of it.
     *
     * @Assert\Uuid(strict=false)
     * @ORM\Column(type="string", length=36, nullable=false)
     */
    private string $uuid;

    /**
     * Short message describing why the journal was listed.
     *
     * @ORM\Column(type="text")
     */
    private string $comment;

    public function __construct()
    {
        parent::__construct();
    }

    /**
     * Return the UUID.
     */
    public function __toString(): string
    {
        return $this->uuid;
    }

    /**
     * Set uuid.
     */
    public function setUuid(string $uuid): static
    {
        $this->uuid = strtoupper($uuid);

        return $this;
    }

    /**
     * Get uuid.
     *
     * UUIDs will be returned in uppercase.
     */
    public function getUuid(): string
    {
        return $this->uuid;
    }

    /**
     * Set comment.
     */
    public function setComment(string $comment): static
    {
        $this->comment = $comment;

        return $this;
    }

    /**
     * Get comment.
     */
    public function getComment(): string
    {
        return $this->comment;
    }
}
